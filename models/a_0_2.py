from math import *
from models.multivariate_model import *
import code

# Parameters binding
# θ[0] - b_11
# θ[1] - δ_1
# θ[2] - λ_1
# θ[3] - b_21
# θ[4] - b_22
# θ[5] - δ_2
# θ[6] - λ_2

class A02(MultivariateModel):
  def __init__(self, without_error_maturities=[1.0/12, 2.0], with_error_maturities=[4.0, 6.0]):
    MultivariateModel.__init__(self, 0, 2, without_error_maturities, with_error_maturities)

  def γ_0(self, τ, θ):
    return (θ[4]**5 * ((0.75 - exp(τ * θ[0]) + 0.25 * exp(2 * τ* θ[0])) * θ[4]**4 * θ[1]**2 + (0.5 - exp(τ * θ[0]) + 0.5 * exp(2 * τ * θ[0])) * θ[3]**2 * θ[4]**2 * θ[1] * θ[5] +(-0.25 + 0.25 * exp(2 * τ * θ[0])) * θ[3]**4 * θ[5]**2) + θ[0]**2 * θ[4]**3 * ((-0.75 + exp(τ * θ[0]) - 0.25 * exp(2 * τ * θ[0])) * θ[4]**4 * θ[1]**2 + (-2 + 2 * exp(τ * θ[0]) - exp(2 * τ * θ[0]) - exp(τ * θ[0]) + 2 * exp(τ * (θ[0] + θ[4]))) * θ[3]**2 * θ[4]**2 * θ[1] * θ[5] + (-0.5 - 0.5 * exp(2 * τ * θ[0]) + exp(τ * (θ[0] + θ[4]))) * θ[3]**4 * θ[5]**2 - τ * θ[4]**6 * θ[1] * θ[2] + (2 - exp(τ * θ[0]) - exp(τ * θ[4])) * θ[3]**2 * θ[4]**3 * θ[5] * θ[2] + θ[4]**5 * θ[1]* (-τ * θ[1] + (2 - 2 * exp(τ * θ[0])) * θ[2])) + θ[0] * θ[4]**4 * ((-1.5 + 2 * exp(τ * θ[0]) - 0.5 * exp(2 * τ * θ[0])) * θ[4]**4 * θ[1]**2 + (-0.5 + exp(τ * θ[0])- 0.5 * exp(2 * τ * θ[0]) + exp(τ * θ[4]) - exp(τ * (θ[0] + θ[4]))) * θ[3]**2 * θ[4]**2 * θ[1] * θ[5] + (0.75 + 0.25 * exp(2 * τ * θ[4]) - exp(τ * (θ[0] + θ[4]))) * θ[3]**4 * θ[5]**2 + (exp(τ * θ[0]) - 1) * θ[3]**2 * θ[4]**3 * θ[5] * θ[2] + θ[4]**5 * θ[1] * (0.5 * τ * θ[1] + (exp(τ * θ[0]) - 1) * θ[2])) + θ[0]**9 * θ[5] * ((0.75 - exp(τ * θ[4]) + 0.25 * exp(2 * τ * θ[4]) + 0.5 * τ * θ[4]) * θ[5] + θ[4] * (-1 + exp(τ * θ[4]) - τ * θ[4]) * θ[6]) + θ[0]**8 * θ[4] * ((-1.5 + 2 * exp(τ * θ[4]) - 0.5 * exp(2 * τ * θ[4]) - τ * θ[4]) * θ[5]**2 -τ * θ[4]**2 * θ[1] * θ[2] + θ[4] * (2 - 2 * exp(τ * θ[4]) + 2 * τ * θ[4]) * θ[5] * θ[6]) + θ[0]**4 * θ[4] * ((0.5 - exp(τ * θ[0]) + 0.5 * exp(2 * τ * θ[0]) + 2 * exp(τ * θ[4]) - 2 * exp(τ * (θ[0] + θ[4]))) * θ[3]**2 * θ[4]**2 * θ[1] * θ[5] + (0.75 + 0.25 * exp(2 * τ * θ[0]) - exp(τ * (θ[0] + θ[4]))) * θ[3]**4 * θ[5]**2 + θ[4]**4 * ((-0.75 + exp(τ * θ[0]) - 0.25 * exp(2 * τ * θ[0])) * θ[1]**2 + (-1.5 + 2 * exp(τ * θ[4]) - 0.5 * exp(2 * τ * θ[4])) * θ[5]**2) + (-4 + 2 * exp(τ * θ[0]) + 2 * exp(τ * θ[4])) * θ[3]**2 * θ[4]**3 * θ[5] * θ[2] + θ[4]**6 * (τ * θ[1] * θ[2] + 2 * τ * θ[5] * θ[6]) + θ[4]**5 * (2 * τ * θ[1]**2 + (-4 + 4 * exp(τ * θ[0])) * θ[1] * θ[2] + θ[5] * (-τ * θ[5] + (2 - 2 * exp(τ * θ[4])) * θ[6]))) + θ[0]**5 * ((-2.5 + exp(τ * θ[0]) - 0.5 * exp(2 * τ * θ[0]) + exp(τ * θ[4]) + exp(τ * (θ[0] + θ[4]))) * θ[3]**2 * θ[4]**2 * θ[1] * θ[5] + (-0.25 + 0.25 * exp(2 * τ * θ[4])) * θ[3]**4 * θ[5]**2 + θ[4]**4 * ((-1.5 + 2 * exp(τ * θ[0]) - 0.5 * exp(2 * τ * θ[0])) * θ[1]**2 + (-0.75 + exp(τ * θ[4]) - 0.25 * exp(2 * τ * θ[4])) * θ[5]**2) + (1 + exp(τ * θ[0]) - 2 * exp(τ * θ[4])) * θ[3]**2 * θ[4]**3 * θ[5] * θ[2] + θ[4]**6 * (-4 * τ * θ[1] * θ[2] + τ * θ[5] * θ[6]) + θ[4]**5 * (-0.5 * τ * θ[1]**2 + (exp(τ * θ[0]) - 1) * θ[1] * θ[2] + θ[5] * (-0.5 * τ * θ[5] + (exp(τ * θ[4]) - 1) * θ[6]))) + θ[0]**7 * θ[4] * ((-0.75 + exp(τ * θ[4]) - 0.25 * exp(2 * τ * θ[4])) * θ[4] * θ[5]**2 + (exp(τ * θ[4]) - 1) * θ[3]**2 * θ[5] * θ[2] + θ[4]**3 * (2 * τ * θ[1] * θ[2] + τ * θ[5] * θ[6]) + θ[4]**2 * (0.5 * τ * θ[1]**2 + (exp(τ * θ[0]) - 1) * θ[1] * θ[2] + θ[5] * (-0.5 * τ * θ[5] + (exp(τ * θ[4]) - 1) * θ[6]))) + θ[0]**3 * θ[4]**2 * ((3 - 3 * exp(τ * θ[0]) + exp(2 * τ * θ[0]) - 2 * exp(τ * θ[4])) * θ[3]**2 * θ[4]**2 * θ[1] * θ[5] + (-0.5 - 0.5 * exp(2 * τ * θ[4]) + exp(τ * (θ[0] + θ[4]))) * θ[3]**4 * θ[5]**2 + θ[4]**4 * ((3 - 4 * exp(τ * θ[0]) + exp(2 * τ * θ[0])) * θ[1]**2 + (0.75 - exp(τ * θ[4]) + 0.25 * exp(2 * τ * θ[4])) * θ[5]**2) + (1 - 2 * exp(τ * θ[0]) + exp(τ * θ[4])) * θ[3]**2 * θ[4]**3 * θ[5] * θ[2] + θ[4]**6 * (2 * τ * θ[1] * θ[2] - τ * θ[5] * θ[6]) + θ[4]**5 * (-0.5 * τ * θ[1]**2 + (exp(τ * θ[0]) - 1) * θ[1] * θ[2] + θ[5] * (0.5 * τ * θ[5] + (exp(τ * θ[4]) - 1) * θ[6]))) + θ[0]**6 * θ[4] * ((exp(τ * θ[4]) - 1) * θ[3]**2 * θ[1] * θ[5] + θ[4]**2 * ((0.75 - exp(τ * θ[0]) + 0.25 * exp(2 * τ * θ[0])) * θ[1]**2 + (3 - 4 * exp(τ * θ[4]) + exp(2 * τ * θ[4])) * θ[5]**2) + (2 - exp(τ * θ[0]) - exp(τ * θ[4]) * θ[3]**2 * θ[4] * θ[5] * θ[2] + θ[4]**4 * (τ * θ[1] * θ[2] - 4 * τ * θ[5] * θ[6]) + θ[4]**3 * (-τ * θ[1]**2 + (2 - 2 * exp(τ * θ[0])) * θ[1] * θ[2] + θ[5] * (2 * τ * θ[5] + (-4 + 4 * exp(τ * θ[4])) * θ[6]))))) / (τ * θ[0]**3 * θ[4]**3 * (θ[0] + θ[4]) * (θ[0]**2 - 2 * θ[0] * θ[4] + θ[4]**2) * (θ[0]**3 - θ[0]**2 * θ[4] - θ[0] * θ[4]**2 + θ[4]**3))

  def γ(self, τ, θ):
    # code.interact(local=dict(globals(), **locals()))
    return [(θ[1] * (exp(τ * θ[0]) - 1)) / (θ[0] * τ) + ((exp(τ * θ[0]) - exp(τ * θ[4])) * θ[3]**2 * θ[5]) / (τ * θ[0] * θ[4] * (θ[4] - θ[0])), (θ[5] * (exp(τ * θ[4]) - 1)) / (θ[4] * τ)]

  def cinv(self, x, x_0, θ):
    return -0.5 * (x[0] - x_0[0])**2 - 0.5 * (x[1] - x_0[1])**2

  def c0(self, x, x_0, θ):
    return 0.5 * θ[0] * (x[0] - x_0[0]) * (x[0] + x_0[0]) + 0.5 * (x[1] - x_0[1]) * (θ[3] * (x[0] + x_0[0]) + θ[4] * (x[1]  +  x_0[1]))

  def c1(self, x, x_0, θ):
    return -0.5 * (θ[0] + θ[4]) - θ[0]**2 / 6 * (x[0]**2 + x[0] * x_0[0] + x_0[0]**2) - θ[4]**2 / 6 * (x[1]**2 + x[1] * x_0[1] + x_0[1]**2) - θ[3]**2 / 8 * (x[0] + x_0[0])**2 + θ[3]**2 / 24 * (x[1] - x_0[1])**2 - θ[0] * θ[4] / 6 * (2 * x[0] * x[1] + x[0] * x_0[1] + x_0[0] * x[1] + 2 * x_0[0] * x_0[1])

  def print_params(self, θ):
    print("| b_11 = " + str(θ[0]) + ", δ_1 = " + str(θ[1]) + ", λ_1 = " + str(θ[2]) + ", λ_1 = " + str(θ[3]) + ", b_21 = " + str(θ[4]) + ", b_22 = " + str(θ[5]) + ", δ_2 = " + str(θ[6]) + " |")

  def is_valid(self, θ):
    return (θ[0] < 0) & (θ[4] < 0)
